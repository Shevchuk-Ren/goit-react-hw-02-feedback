{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Feedback/Feedback.styled.jsx","components/Feedback/Feedback.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/App/App.styled.jsx","components/App/App.js","index.js"],"names":["SectionWrapper","styled","section","Name","h2","Section","title","children","Button","button","FeedBack","good","neutral","bad","className","type","onClick","Point","p","Decoration","span","Notification","Statistics","total","positivePercentage","onLeaveFeedback","defaultProps","Container","div","App","state","changeGoodFeedBack","setState","prevState","changeNeutralFeedBack","changeBadFeedBack","console","log","countTotalFeedback","countPositiveFeedbackPercentage","precentage","Math","round","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7931a1c.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\n\r\n\r\nexport const SectionWrapper = styled.section`\r\n  width: 300px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  background-color: rgba(220, 194, 127, 0.347);\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const Name = styled.h2`\r\ncolor: rgba(64, 64, 53, 0.823);\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SectionWrapper, Name } from './Section.styled';\r\n\r\nconst Section = ({title, children}) => (\r\n    <SectionWrapper>\r\n      {title && <Name>{ title}</Name>}  \r\n      {children}  \r\n    </SectionWrapper>\r\n)\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n\r\n};\r\nexport default Section;","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  padding: 10px;\r\n  margin-left: 5px;\r\n  width: 80px;\r\n  color: cornsilk;\r\n  background-color: rgba(49, 29, 29, 0.571);\r\n`;\r\n\r\n","import React from 'react';\r\nimport { Button } from './Feedback.styled'\r\nimport PropTypes  from 'prop-types';\r\n\r\n\r\nconst FeedBack = ({good, neutral, bad }) => (\r\n    <div className=\"buttons__set\">\r\n        <Button type=\"button\"  onClick={good}>Good</Button>\r\n        <Button type=\"button\"  onClick={neutral}>Neutral</Button>\r\n        <Button type=\"button\"  onClick={bad}>Bad</Button>\r\n    </div>\r\n                  \r\n);\r\nFeedBack.propTypes = {\r\n    good: PropTypes.func.isRequired,\r\n    neutral: PropTypes.func.isRequired,\r\n    bad:  PropTypes.func.isRequired\r\n};\r\nexport default FeedBack;\r\n","import styled from '@emotion/styled';\r\n\r\n\r\nexport const Point = styled.p`\r\n  color: rgba(248, 240, 240, 0.857);\r\n  font-weight: bold;\r\n`;\r\nexport const Decoration = styled.span`\r\ncolor: rgba(49, 29, 29, 0.571);\r\n`;\r\nexport const Notification = styled.p`\r\ncolor: rgba(49, 29, 29, 0.714);\r\n  font-weight: bold;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Decoration, Point, Notification } from './Statistics.styled';\r\n\r\n\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage, onLeaveFeedback}) => (\r\n    <div className=\"statistics__set\">\r\n        {good === 0 && neutral === 0 && bad === 0 ?\r\n            <Notification>{onLeaveFeedback}</Notification>\r\n            :\r\n            <div >\r\n                <Point>Good: <Decoration>{good}</Decoration></Point>\r\n                <Point>Neutral: <Decoration>{ neutral}</Decoration></Point>\r\n                <Point>Bad: <Decoration>{bad}</Decoration> </Point>\r\n                 <Point>Total: <Decoration>{total}</Decoration> </Point>\r\n                <Point>Positive feedback: <Decoration>{positivePercentage}%</Decoration></Point>\r\n            </div>\r\n        }\r\n    </div>\r\n                  \r\n);\r\n\r\nStatistics.defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired ,\r\n\r\n};\r\nexport default Statistics;\r\n\r\n","import styled from '@emotion/styled';\r\n\r\n\r\nexport const Container = styled.div`\r\npadding: 20px 5px;\r\n`;","import React from 'react';\nimport Section from '../Section';\nimport FeedBack from '../Feedback';\nimport Statistics from '../Statistics';\nimport { Container } from './App.styled';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  changeGoodFeedBack = () => {\n    this.setState(prevState => {\n      return {\n        good: prevState.good + 1,\n      };\n    });\n  };\n  changeNeutralFeedBack = () => {\n    this.setState(prevState => {\n      return {\n        neutral: prevState.neutral + 1,\n      };\n    });\n  };\n  changeBadFeedBack = () => {\n    this.setState(prevState => {\n      return {\n        bad: prevState.bad + 1,\n      };\n    });\n    console.log('Click bad');\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.bad + this.state.neutral + this.state.good;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const total = this.state.bad + this.state.neutral + this.state.good;\n    const precentage = total ? (this.state.good * 100) / total : 0;\n    return Math.round(precentage);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedBack\n            good={this.changeGoodFeedBack}\n            neutral={this.changeNeutralFeedBack}\n            bad={this.changeBadFeedBack}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n            onLeaveFeedback=\"No feedback given\"\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}