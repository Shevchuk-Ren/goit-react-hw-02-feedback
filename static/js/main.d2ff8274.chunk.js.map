{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Feedback/Feedback.styled.jsx","components/Feedback/Feedback.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/App/App.styled.jsx","components/App/App.js","index.js"],"names":["SectionWrapper","styled","section","Name","h2","Section","title","children","Button","button","FeedBack","options","onLeavFeedback","className","map","option","type","onClick","Point","p","Decoration","span","Notification","Statistics","good","neutral","bad","total","positivePercentage","answer","Container","div","App","state","props","leaveFeedback","setState","prevState","console","log","countTotalFeedback","countPositiveFeedbackPercentage","precentage","Math","round","this","onPositivePercentage","React","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAIaA,EAAiBC,IAAOC,QAAV,oLASdC,EAAOF,IAAOG,GAAV,+D,OCEFC,EAXC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,eAACP,EAAD,WACGM,GAAS,cAACH,EAAD,UAAQG,IACjBC,MCLMC,EAASP,IAAOQ,OAAV,2MCgBJC,EAZE,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,eAAZ,OAEb,qBAAKC,UAAU,eAAf,SACKF,EAAQG,KAAI,SAAAC,GAAM,OAAK,cAACP,EAAD,CAAQQ,KAAK,SAAsBC,QAAS,kBAAKL,EAAeG,IAAhE,SAA0EA,GAA/CA,SCN9CG,EAAQjB,IAAOkB,EAAV,wFAILC,EAAanB,IAAOoB,KAAV,+DAGVC,EAAerB,IAAOkB,EAAV,qFCuBVI,EA1BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAAoBC,EAAlD,EAAkDA,OAAlD,OACf,qBAAKhB,UAAU,kBAAf,SACc,IAATW,GAA0B,IAAZC,GAAyB,IAARC,EAC5B,cAACJ,EAAD,UAAeO,IAEf,gCACI,eAACX,EAAD,oBAAa,cAACE,EAAD,UAAaI,OAC1B,eAACN,EAAD,uBAAgB,cAACE,EAAD,UAAcK,OAC9B,eAACP,EAAD,mBAAY,cAACE,EAAD,UAAaM,IAAzB,OACC,eAACR,EAAD,qBAAc,cAACE,EAAD,UAAaO,IAA3B,OACD,eAACT,EAAD,iCAA0B,eAACE,EAAD,WAAaQ,EAAb,gBCd7BE,EAAY7B,IAAO8B,IAAV,kDCGhBC,E,4MAOJC,MAAQ,CACNT,KAAM,EAAKU,MAAMV,KACjBC,QAAS,EAAKS,MAAMT,QACpBC,IAAK,EAAKQ,MAAMR,K,EAGlBS,cAAgB,SAAApB,GACd,EAAKqB,UAAS,SAAAC,GAEZ,OADAC,QAAQC,IAAIF,EAAUtB,IACf,eAAGA,EAASsB,EAAUtB,GAAU,O,EAG3CyB,mBAAqB,WACnB,MAA+B,EAAKP,MAA5BR,EAAR,EAAQA,QAER,OAFA,EAAiBC,IACGD,EADpB,EAAsBD,M,EAIxBiB,gCAAkC,WAChC,MAA+B,EAAKR,MAA5BR,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKF,EAAtB,EAAsBA,KAChBG,EAAQD,EAAMD,EAAUD,EACxBkB,EAAaf,EAAgB,IAAPH,EAAcG,EAAQ,EAClD,OAAOgB,KAAKC,MAAMF,I,4CAGpB,WACE,MAA+BG,KAAKZ,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBS,EAAgBU,KAAKV,cACrBW,EAAuBD,KAAKJ,kCAElC,OACE,eAACX,EAAD,WACE,cAAC,EAAD,CAASxB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BC,eAAgBuB,MAIpB,cAAC,EAAD,CAAS7B,MAAM,aAAf,SACE,cAAC,EAAD,CACEkB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,KAAKL,qBACZZ,mBAAoBkB,EACpBjB,OAAO,+B,GApDDkB,IAAMC,WAAlBhB,EACGiB,aAAe,CACpBzB,KAAM,EACNC,QAAS,EACTC,IAAK,GAwDMM,QC7DfkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d2ff8274.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\n\r\n\r\nexport const SectionWrapper = styled.section`\r\n  width: 300px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  background-color: rgba(220, 194, 127, 0.347);\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const Name = styled.h2`\r\n  color: rgba(64, 64, 53, 0.823);\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SectionWrapper, Name } from './Section.styled';\r\n\r\nconst Section = ({title, children}) => (\r\n    <SectionWrapper>\r\n      {title && <Name>{ title}</Name>}  \r\n      {children}  \r\n    </SectionWrapper>\r\n)\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n\r\n};\r\nexport default Section;","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  padding: 10px;\r\n  margin-left: 5px;\r\n  width: 80px;\r\n  color: cornsilk;\r\n  background-color: rgba(49, 29, 29, 0.571);\r\n  :first-letter {\r\n    text-transform:capitalize;\r\n}\r\n`;\r\n\r\n","import React from 'react';\r\nimport { Button } from './Feedback.styled'\r\nimport PropTypes  from 'prop-types';\r\n\r\n\r\n\r\nconst FeedBack = ({ options, onLeavFeedback }) => (\r\n    \r\n    <div className=\"buttons__set\">\r\n        {options.map(option => (<Button type=\"button\" key={option} onClick={()=> onLeavFeedback(option)}>{option}</Button>))}\r\n    </div>              \r\n);\r\n\r\nFeedBack.propTypes = {\r\n    onLeavFeedback: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired\r\n};\r\n\r\nexport default FeedBack;\r\n","import styled from '@emotion/styled';\r\n\r\n\r\nexport const Point = styled.p`\r\n  color: rgba(248, 240, 240, 0.857);\r\n  font-weight: bold;\r\n`;\r\nexport const Decoration = styled.span`\r\n  color: rgba(49, 29, 29, 0.571);\r\n`;\r\nexport const Notification = styled.p`\r\n  color: rgba(49, 29, 29, 0.714);\r\n  font-weight: bold;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Decoration, Point, Notification } from './Statistics.styled';\r\n\r\n\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage, answer}) => (\r\n    <div className=\"statistics__set\">\r\n        {good === 0 && neutral === 0 && bad === 0 ?\r\n            <Notification>{answer}</Notification>\r\n            :\r\n            <div >\r\n                <Point>Good: <Decoration>{good}</Decoration></Point>\r\n                <Point>Neutral: <Decoration>{ neutral}</Decoration></Point>\r\n                <Point>Bad: <Decoration>{bad}</Decoration> </Point>\r\n                 <Point>Total: <Decoration>{total}</Decoration> </Point>\r\n                <Point>Positive feedback: <Decoration>{positivePercentage}%</Decoration></Point>\r\n            </div>\r\n        }\r\n    </div>\r\n                  \r\n);\r\n\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired ,\r\n\r\n};\r\nexport default Statistics;\r\n\r\n","import styled from '@emotion/styled';\r\n\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px 5px;\r\n`;","import React from 'react';\nimport Section from '../Section';\nimport FeedBack from '../Feedback';\nimport Statistics from '../Statistics';\nimport { Container } from './App.styled';\n\nclass App extends React.Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  leaveFeedback = option => {\n    this.setState(prevState => {\n      console.log(prevState[option]);\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n  countTotalFeedback = () => {\n    const { neutral, bad, good } = this.state;\n    const total = bad + neutral + good;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { neutral, bad, good } = this.state;\n    const total = bad + neutral + good;\n    const precentage = total ? (good * 100) / total : 0;\n    return Math.round(precentage);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const leaveFeedback = this.leaveFeedback;\n    const onPositivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedBack\n            options={['good', 'neutral', 'bad']}\n            onLeavFeedback={leaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={onPositivePercentage}\n            answer=\"No feedback given\"\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}